<?php

/**
 * @file
 * Provides statistics reporting for Express web sites.
 */

/**
 * Implements hook_menu().
 */
function express_site_metrics_menu() {
  $items['admin/express/metrics'] = array(
    'title' => 'Express Site Metrics',
    'page callback' => 'express_site_metrics_pretty_print',
    'access arguments' => array('administer modules'),
  );

  $items['admin/express/metrics/json'] = array(
    'title' => 'Express Site Metrics JSON endpoint',
    'access callback' => 'express_site_metrics_access',
    'page callback' => 'express_site_metrics_json',
    // 'access arguments' => array('administer modules'),
  );

  return $items;
}

/**
 * Returns json site metrics data.
 *
 * If there is a valid token in the request headers data connectin is allowed.
 *
 * @return bool
 *   User can or canno access this endpoint.
 */
function express_site_metrics_access() {

  if (!empty($_SERVER['HTTP_AUTHORIZATION'])) {
    $secret = variable_get('express_site_metrics_secret', 'SECRET');
    $tokensDb = variable_get('express_site_metrics_tokens');

    $tokenHandler = new TokenHandler($secret, $tokensDb, $_SERVER);

    return $tokenHandler->validate();
  }

  return FALSE;
}

/**
 * Build a json response with metrics data.
 */
function express_site_metrics_json() {
  $inspector = new SiteMetricsInspector();
  drupal_add_http_header('Status', 200, TRUE);
  drupal_add_http_header('Content-Type', 'application/json');
  $metrics = $inspector->gatherData();
  echo $metrics;
}

/**
 * Pretty prints site metrics data to screen.
 */
function express_site_metrics_pretty_print() {
  // Create a token.
  $secret = variable_get('express_site_metrics_secret', 'no secret in variable table.');
  $userId = variable_get('express_site_metrics_tokens')['prometheus']['userId'];
  $payloadArray = array();
  $payloadArray['userId'] = $userId;
  $token = JWT::encode($payloadArray, $secret);

  // Return to caller.
  $returnArray = array('token', $token);
  $jsonEncodedReturnArray = json_encode($returnArray, JSON_PRETTY_PRINT);

  return [
    'content' => [
      '#type' => 'markup',
      '#markup' => "<pre style=\"background-color: AliceBlue\">$jsonEncodedReturnArray</pre>",
    ],
  ];
  //   return [
  //     'content' => [
  //       '#type' => 'markup',
  //       '#markup' => "<h2>$secret</h2><pre style=\"background-color: AliceBlue\">You will see site metrics printed here at some point in the future.</pre>",
  //     ],
  //   ];
}

/**
 * Implements hook_cron().
 */
function express_site_metrics_cron() {

}
