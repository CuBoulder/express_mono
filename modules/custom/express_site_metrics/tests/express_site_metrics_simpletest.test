<?php

require '../classes/express_site_metrics_instpector.php';
require '../classes/express_site_metrics_token.php';

class Mock {
  private $express_site_metrics_tokens = ['prometheus' => ['userId' => 'Prometheus']];
  private $express_site_metrics_secret = 'SECRET';

  static function varibale_get(string $key, mixed $ifEmpty = NULL): mixed {
    if ($key === 'express_site_metrics_tokens') {
      return self::$express_site_metrics_tokens;
    }

    elseif ($key === 'express_site_metric_secret') {
      return self::$express_site_metrics_secret;
    }
  }

  static function variable_set(string $key, mixed $value) {
    if ($key === 'express_site_metrics_tokens') {
      self::$express_site_metrics_tokens = $value;
    }
  }

}

/**
 * Unit tests for this module.
 */
class ExpressSiteMetricsTestCase extends DrupalUnitTestCase {

  // A mock of the expected request from Prometheus.
  private $tokens = ['good' => '', 'bad' => ''];
  private $Mock = new Mock();
  /**
   * Describe test suite.
   */
  public static function getInfo() {
    return [
      'name' => 'Simpletest Example unit tests',
      'description' => 'Test the SiteMetricsInspector class',
      'group' => 'express_site_metrics',
    ];
  }

  public function testTokenGenerate() {
    // Should return token -> xxxxx.xxxxx.xxxxxx.
    $TokenGenerator = new Token('dbGet', 'dbSet');

  }

  public function testTokenValidate() {
    // Should return TRUE if token is valid. FALSE if not.
  }

  // public function testInspectorGetMetrics() {
  //   // Should return an associative array.
  // }

}
