<?php

/**
 * @file
 * Install hooks for cu_core module.
 */

/**
 * Implements hook_install().
 */
function cu_core_install() {

  // Set the weight high to run last hooks after other modules.
  db_update('system')
    ->fields(array('weight' => 999))
    ->condition('name', 'cu_core', '=')
    ->execute();

  $hosting = express_check_known_hosts();

  if ($hosting === 'travis') {
    module_enable(array('travis_hosting', 'cu_users'));
  }
  elseif ($hosting == 'ucb_on_prem_hosting') {
    module_enable(array('ucb_on_prem_hosting'));
  }
  elseif ($hosting === 'pantheon') {
    module_enable(array('pantheon_hosting'));
  }
  elseif ($hosting === 'lando' || $hosting === 'valet') {
    module_enable(array('local_hosting'));
  }
  else {
    module_enable(array('ng_hosting'));
  }

  theme_enable(array(
    'cuhighlight',
    'cuivory',
    'culayers',
    'cuminimal',
    'cumodern',
    'curise',
    'cushadow',
    'cusimple',
    'cuspirit',
    'cuswatch',
    'cutradition',
  ));

  // Add blocks shortcut to shortcuts set.
  $shortcut_set = shortcut_set_load(SHORTCUT_DEFAULT_SET_NAME);
  $shortcut_set->links[] =
    array(
      'link_path' => 'admin/content/blocks',
      'link_title' => st('Blocks'),
      'weight' => -18,
    );
  shortcut_set_save($shortcut_set);

  // Set default variables for user_external_invite.
  _set_external_invite_variables();

  // Change for #FIT-583 for https://www.drupal.org/node/2172293.
  // Must be set before cu_forms_bundle is enabled.
  variable_set('webform_install_add_body_field', TRUE);

  variable_set('site_name', 'University of Colorado Boulder');
  variable_set('site_name_1', 'University of Colorado Boulder');
  variable_set('site_slogan', 'University of Colorado Boulder');

  variable_set('express_help_base_url', 'http://www.colorado.edu/webcentral');

  // Set message for when enabling of bundles is turned off.
  variable_set('profile_module_manager_disable_enabling_atlas_bundles', 0);
  variable_set('profile_module_manager_disable_enabling_text', 'Bundles are not available at this time. Contact websupport@colorado.edu for questions regarding this.');
  variable_set('rave_alerts_rss_url', 'http://www.getrave.com/rss/cuboulder/channel1');
  variable_set('rave_alerts_check_enable', 1);
  variable_set('rave_alerts_network_fail_message', 'Network Failure: Please go directly to http://alerts.colorado.edu for more information.');
  variable_set('rave_alerts_deafult_read_more_url', 'http://alerts.colorado.edu');

  // Set the syslog_identity variable to the SID.
  $cu_sid = variable_get('cu_sid', '');
  if ($cu_sid) {
    // Current value
    $syslog_identity = 'drupal-' . $cu_sid;
  }
  else {
    $syslog_identity = 'drupal-no_sid';
  }
  variable_set('syslog_identity', $syslog_identity);

  // Key for 'LOG_LOCAL0' in the form.
  variable_set('syslog_facility', '128');
  variable_set('syslog_format', '!base_url|!timestamp|!type|!ip|!request_uri|!referer|!uid|!link|!message');

  // Set variable for disabling certain messages from users.
  variable_set('disable_messages_ignore_regex', array(
    '/^Metatag support has been enabled for the .*?$/i',
    '/^You can now .+configure the CAPTCHA module.+ for your site.$/i',
    '/^Note that the CAPTCHA module disables .+page caching.+ of pages that include a CAPTCHA challenge.$/i',
    '/^The block System help was assigned to the invalid region help and has been disabled.$/i',
  ));
  variable_set('disable_messages_ignore_patterns', 'Metatag support has been enabled for the .+
You can now .+configure the CAPTCHA module.+ for your site.
Note that the CAPTCHA module disables .+page caching.+ of pages that include a CAPTCHA challenge.
The block System help was assigned to the invalid region help and has been disabled.');

  variable_set('express_layout_node_type_ignore', array('file'));

  db_update('responsive_preview')
    ->fields(array('status' => 0,))
    ->execute();

  db_update('responsive_preview')
    ->fields(array('status' => 1,))
    ->condition(db_or()
      ->condition('name', 'medium')
      ->condition('name', 'small')
    )
    ->execute();

  // Disable user 1 & set random name.
  $random_name = 'admin-' . user_password(10);

  // Generate hashed password.
  $unhashed_pass = user_password(50);
  require_once DRUPAL_ROOT . '/' . variable_get('password_inc', 'includes/password.inc');
  $hashed_pass = user_hash_password(trim($unhashed_pass));

  variable_set('user_mail_status_activated_notify ', 0);

  // Set admin user email to something not admin@example.com.
  $admin_user = user_load(1);
  $admin_user->mail = 'websupport@colorado.edu';
  $admin_user->name = $random_name;
  $admin_user->pass = $hashed_pass;
  $admin_user->status = 0;
  user_save($admin_user);

  watchdog('express', 'attempted to disable uid 1');

  variable_set('express_permissions_owner_cap', 4);

  // Google Tag Manager.
  variable_set('google_tag_container_id', 'GTM-M3DX2QP');
}

/**
 * Set default variables for user_external_invite.
 */
function _set_external_invite_variables() {
  // Set core invite roles.
  $core_roles = express_permissions_role_settings(array('core'));
  $core_role_ids = array();
  foreach ($core_roles['rid'] as $rid => $role) {
    $core_role_ids[] = $rid;
  }
  variable_set('user_external_invite_core_roles', $core_role_ids);

  // Set Content Editor as the default role to invite.
  variable_set('user_external_invite_default_role', $core_roles['names']['site_editor']['rid']);

  // Set addon invite roles.
  $addon_roles = express_permissions_role_settings(array('core_addon'));
  $addon_roles_array = array();
  foreach ($addon_roles['rid'] as $rid => $role) {
    $addon_roles_array[] = $rid;
  }

  variable_set('user_external_invite_addon_roles', $addon_roles_array);
  variable_set('user_external_invite_days_valid_for', 5);

  variable_set('user_external_invite_invite_template', '[user_external_invite:invite_custom]

You have been invited to join the [site:name] Web Express website as a user with "[user_external_invite:invite_core_role][user_external_invite:invite_addon_roles]" access privileges.

To accept this invitation:
1) Go to [user_external_invite:invite_link]
2) Login with your IdentiKey name and password.

Upon completion, you will receive an email confirming your access.

--
The Web Express Team
http://www.colorado.edu/webcentral
websupport@colorado.edu');

  variable_set('user_external_invite_confirmation_template', 'We have received your request to grant "[user_external_invite:invite_core_role][user_external_invite:invite_addon_roles]" access to the following users:

[user_external_invite:invited_emails]

An email invitation has been sent requesting the user to login to [site:url] and accept the invitation. Upon completion, a confirmation email will be sent.

If you did not submit this request or need to modify it, please contact us at websupport@colorado.edu.

--
The Web Express Team
http://www.colorado.edu/webcentral
websupport@colorado.edu');

  variable_set('user_external_invite_accepted_template', 'We are confirming [user_external_invite:invited_email] now has "[user_external_invite:invite_core_role][user_external_invite:invite_addon_roles]" access to the [site:name], [site:url], website.

Web Central:
You can use the Web Central website as your main resource for step-by-step tutorials, information on training sessions, and requesting help. http://www.colorado.edu/webcentral

--
The Web Express Team
http://www.colorado.edu/webcentral
websupport@colorado.edu');

  variable_set('user_external_invite_accepted_confirmation_template', 'You have successfully joined the [site:name] Web Express website as a user with "[user_external_invite:invite_core_role][user_external_invite:invite_addon_roles]" access privileges.

To access and edit this site:
1) Go to [user_external_invite:invite_login_link]
2) Login with your IdentiKey name and password.

Web Central:
You can use the Web Central website as your main resource for step-by-step tutorials, information on training sessions, and requesting help. http://www.colorado.edu/webcentral

--
The Web Express Team
http://www.colorado.edu/webcentral
websupport@colorado.edu');
}

/**
 * Variable sets for Express transition.
 */
function cu_core_update_7001() {

  variable_set('express_help_base_url', 'https://www.colorado.edu/webcentral');

  variable_set('profile_module_manager_ignore', 'secure_permissions, express_permissions, cu_users, cu_core, cu_help, cu_inventory, cu_inventory_stats, express_final');

  // Set SEO bundle to be hidden in bundle list form.
  variable_set('profile_module_manager_bundle_ignore', array('cu_seo_bundle' => 'cu_seo_bundle'));
  // Set message for when enabling of bundles is turned off.
  variable_set('profile_module_manager_disable_enabling_text', 'Due to unexpectedly high load on the servers, the option to enable bundles has temporarily been disabled.  Please check back tomorrow.');

  // Set variable for disabling certain messages from users.
  variable_set('disable_messages_ignore_regex', array(
    '/^Metatag support has been enabled for the .*?$/i',
    '/^You can now .+configure the CAPTCHA module.+ for your site.$/i',
    '/^Note that the CAPTCHA module disables .+page caching.+ of pages that include a CAPTCHA challenge.$/i',
  ));
  variable_set('disable_messages_ignore_patterns', 'Metatag support has been enabled for the .+
You can now .+configure the CAPTCHA module.+ for your site.
Note that the CAPTCHA module disables .+page caching.+ of pages that include a CAPTCHA challenge.');
}

/**
 * Revert features by passing features in an array.
 */
function cu_core_revert_features($features = NULL) {
  // If an array of specific features isn't passed, populate with all overridden features.
  if ($features == NULL) {
    module_load_include('inc', 'features', 'features.export');
    $features = features_get_features();
    foreach ($features as $feature) {
      if (features_get_storage($feature->name) == 0) {
        unset($features[$feature->name]);
      }
    }
  }
  // Check against features that currently can't be reverted.
  $express_protected_features = array_merge(array(
    'cu_home_page',
    'cu_sitewide',
  ), explode(',', variable_get('express_protected_features', '')));

  foreach ($features as $key => $feature) {
    if (!in_array($key, $express_protected_features)) {
      $f = features_get_features($key);
      $components = array_keys($f->info['features']);
      features_revert(array($f->name => $components));
      watchdog('cu_core', 'Attempting to revert %feature', array('%feature' => $feature->name), WATCHDOG_NOTICE);
    }
  }
}

/**
 * Run every time a db update.
 *
 * This calls the inventory update function and admin password change.
 */
function cu_core_express_update($version) {

  cu_core_atlas_update($version);

  // Change admin user/pass.
  cu_core_scramble_admin();
}

/**
 * Updates inventory with profile version.
 */
function cu_core_inventory_update($version) {
  // Nulling this function out so that older update hooks will still work.
  return;
}

/**
 * Updates Atlas with profile version.
 */
function cu_core_atlas_update($version) {
  if (module_exists('atlas')) {
    atlas_process_core_schema_version($version);
  }
}

/**
 * Obscures uid 1 password and username for added security.
 */
function cu_core_scramble_admin() {

  // Generate hashed password.
  $unhashed_pass = user_password(50);
  require_once DRUPAL_ROOT . '/' . variable_get('password_inc', 'includes/password.inc');
  $hashed_pass = user_hash_password(trim($unhashed_pass));

  // Abort if the hashing failed and returned FALSE.
  if (!$hashed_pass) {
    return FALSE;
  }
  else {
    // Save admin user with new user/password.
    $user = user_load(1);
    $user->name = 'admin-' . user_password(10);
    $user->pass = $hashed_pass;
    user_save($user);
  }
}

/**
 * Implements hook_requirements().
 * cu_core is designed to be extended by 1 hosting module
 */
function cu_core_requirements($phase) {
  $requirements = array();
  if ($phase === 'runtime') {
    $t = get_t();

    // Get enabled modules with hosting in the name.
    $enabled_hosting_modules = (array) db_query("SELECT name FROM {system} WHERE type = 'module' AND status = 1 AND name LIKE '%_hosting' ORDER BY weight ASC, name ASC")->fetchCol('name');
    $hosting_modules_count = count($enabled_hosting_modules);

    if ($hosting_modules_count != 1) {
      $hosting_modules = !empty(implode(', ', $enabled_hosting_modules)) ? implode(', ', $enabled_hosting_modules) : 'None.';
      $requirements['cu_profile_module_manager'] = array(
        'title' => $t('Hosting Module Status'),
        'value' => 'Hosting modules enabled: '. $hosting_modules,
        'severity' => REQUIREMENT_ERROR,
      );
    }
  }
  return $requirements;
}

/**
 * Express 3.0.0 Update - Revert Features
 */
function cu_core_update_7059() {
  cu_core_revert_features();
}

/**
 * Express 3.0.2 Update - Rebuild permssions to force discovery of new roles
 */
function cu_core_update_7060() {
  secure_permissions_rebuild();
  // Set new Content Editor as the default role to invite.
  $site_editor_role = user_role_load_by_name('site_editor');
  variable_set('user_external_invite_default_role', $site_editor_role->rid);
}

/**
 * Express 3.0.2 Update - Add Form Manager to "invitable" roles if Form Bundle is enabled
 */
function cu_core_update_7061() {
  if (module_exists('cu_forms_bundle')) {
    $form_manager_role = user_role_load_by_name('form_manager');

    $invite_roles = variable_get('user_external_invite_addon_roles', array());
    $invite_roles[] = $form_manager_role->rid;

    variable_set('user_external_invite_addon_roles', $invite_roles);
  }
}

/**
 * Fixing array formatting of string overrides, Setting gtm variable.
 */
function cu_core_update_7062() {
  module_enable(array('google_tag'));
  variable_set('google_tag_container_id', 'GTM-M3DX2QP');

  $locale_custom_strings_en = array();
  $locale_custom_strings_en[''] = array(
    'Each menu has a corresponding block that is managed on the <a href="@blocks">Blocks administration page</a>.' => 'Each menu has a corresponding block which can be placed in a content region.',
    'You can enable the newly-created block for this menu on the <a href="@blocks">Blocks administration page</a>.' => 'Each menu has a corresponding block which can be placed in a content region.',
    'Set and configure the default theme for your website.  Alternative <a href="@themes">themes</a> are available.' => 'Set and configure the default theme for your website.',
    'The menu module allows on-the-fly creation of menu links in the content authoring forms. To configure these settings for a particular content type, visit the <a href="@content-types">Content types</a> page, click the <em>edit</em> link for the content type, and go to the <em>Menu settings</em> section.' => 'The menu module allows on-the-fly creation of menu links.',
  );
  variable_set('locale_custom_strings_en', $locale_custom_strings_en);
}

/**
 * Disabling Express Help module.
 */
function cu_core_update_7063() {
  module_disable(array('express_help'));
  drupal_uninstall_modules(array('express_help'));
}

/**
 * Enabling Add Another module.
 */
function cu_core_update_7064() {
  module_enable(array('addanother'));
}

/**
 * Rebuild permissions.
 */
function cu_core_update_7065() {
  secure_permissions_rebuild();
}
